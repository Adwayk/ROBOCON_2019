char arr[27];
/*
  Digital button:
    1//PS2_SELECT 0
    PS2_JOYSTICK_LEFT 1
    PS2_JOYSTICK_RIGHT 2
    2//PS2_START 3
    3//PS2_UP 4
    4//PS2_RIGHT 5 
    5//PS2_DOWN 6 
    6//PS2_LEFT 7 
    7//PS2_LEFT_2 8 
    8//PS2_RIGHT_2 9
    9//PS2_LEFT_1 10
    10//PS2_RIGHT_1 11
    11//PS2_TRIANGLE 12
    12//PS2_CIRCLE 13 
    13//PS2_CROSS 14
    14//PS2_SQUARE 15

  Analog button:
    15//PS2_JOYSTICK_LEFT_X_AXIS 16
    16//PS2_JOYSTICK_LEFT_Y_AXIS 17
    17//PS2_JOYSTICK_RIGHT_X_AXIS 18
    18//PS2_JOYSTICK_RIGHT_Y_AXIS 19
    PS2_JOYSTICK_LEFT_UP 20
    PS2_JOYSTICK_LEFT_DOWN 21
    PS2_JOYSTICK_LEFT_LEFT 22
    PS2_JOYSTICK_LEFT_RIGHT 23
    PS2_JOYSTICK_RIGHT_UP 24
    PS2_JOYSTICK_RIGHT_DOWN 25
    PS2_JOYSTICK_RIGHT_LEFT 26
    PS2_JOYSTICK_RIGHT_RIGHT 27
*/
#include <SoftwareSerial.h>
#include <Cytron_PS2Shield.h>

Cytron_PS2Shield ps2(10,11);
void setup()
{
  ps2.begin(9600);
  Serial.begin(9600);// This baudrate must same with the jumper setting at PS2 shield
}

char speed_class(int a) //0 -255
{
  if (a> 225)
  return('8');
  if (a> 200)
  return('7');
  if (a> 175)
  return('6');
  if (a> 150)
  return('5');
  if (a> 125)
  return('4');
  if (a> 100)
  return('3');
  if (a> 75)
  return('2');
  if (a> 50)
  return('1');
  if (a> 25)
  return('0');
  else
  return('0');

}

void reset()
{
  for(int j=0;j<16;j++)
  arr[j] = 0;
  for(int j=0;j<13;j++)
  arr[j+16] = 4;
}
void loop()
{
  if(ps2.readButton(PS2_JOYSTICK_LEFT) == 0)
  arr[0] = '1';
  else
  arr[0] = '0';
  if(ps2.readButton(PS2_JOYSTICK_RIGHT) == 0)
  arr[1] = '1';
  else
  arr[1] = '0';
  if(ps2.readButton(PS2_START) == 0)
  arr[2] = '1';
  else
  arr[2] = '0';
  if(ps2.readButton(PS2_UP) == 0)
  arr[3] = '1' ;
  else
  arr[3] = '0'; 
  if(ps2.readButton(PS2_RIGHT) == 0)
  arr[4] = '1';
  else
  arr[4] = '0';
  if(ps2.readButton(PS2_DOWN) == 0)
  arr[5] = '1';
  else
  arr[5] = '0';
  if(ps2.readButton(PS2_LEFT) == 0)
  arr[6] = '1';
  else
  arr[6] = '0';
  if(ps2.readButton(PS2_LEFT_2) == 0)
  arr[7] = '1';
  else
  arr[7] = '0';
  if(ps2.readButton(PS2_RIGHT_2) == 0)
  arr[8] = '1';
  else
  arr[8] = '0';
  if(ps2.readButton(PS2_LEFT_1) == 0)
  arr[9] = '1';
  else
  arr[9] = '0';
  if(ps2.readButton(PS2_RIGHT_1) == 0)
  arr[10] = '1';
  else
  arr[10] = '0';
  if(ps2.readButton(PS2_TRIANGLE) == 0)
  arr[11] = '1';
  else
  arr[11] = '0';
  if(ps2.readButton(PS2_CIRCLE) == 0)
  arr[12] = '1';
  else
  arr[12] = '0';
  if(ps2.readButton(PS2_CROSS) == 0)
  arr[13] = '1';
  else
  arr[13] = '0';
  if(ps2.readButton(PS2_SQUARE) == 0)
  arr[14] = '1';
  else
  arr[14] = '0';
  arr[16] = speed_class(ps2.readButton(PS2_JOYSTICK_LEFT_X_AXIS));
  arr[17] = speed_class(ps2.readButton(PS2_JOYSTICK_LEFT_Y_AXIS));
  arr[18] = speed_class(ps2.readButton(PS2_JOYSTICK_RIGHT_X_AXIS));
  arr[19] = speed_class(ps2.readButton(PS2_JOYSTICK_RIGHT_Y_AXIS));

  Serial.println(arr);
  reset();
}